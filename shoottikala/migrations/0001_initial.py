# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-01-02 10:26
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='Cosplayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('display_name', models.CharField(help_text='Millä nimellä haluat esittäytyä valokuvaajille? Esim. nimimerkkisi, etunimesi, cosplayryhmäsi nimi tai sen jäsenten nimimerkit tai etunimet. Huomaathan, että tätä kenttää ei ole tarkoitettu hahmon nimelle vaan omallesi.', max_length=255, verbose_name='Näyttönimi')),
                ('introduction', models.TextField(help_text='Esittele itsesi tai ryhmäsi muutamalla lauseella valokuvaajille ja kerro cosplayharrastuksestasi.', verbose_name='Esittelyteksti')),
                ('source', models.CharField(blank=True, help_text='Mistä teoksesta hahmosi tai hahmonne ovat peräisin? Esim. animesarjan, elokuvan tai tietokonepelin nimi.', max_length=255, verbose_name='Lähdeteos')),
                ('source_type', models.CharField(choices=[('anime', 'Anime (japanilainen animaatiosarja tai -elokuva)'), ('other_anim', 'Muu animaatiosarja'), ('manga', 'Manga (japanilainen sarjakuva)'), ('other_comic', 'Muu sarjakuva'), ('movie', 'Elokuva'), ('series', 'TV-sarja'), ('game', 'Videopeli'), ('original', 'Originaalihahmo'), ('other', 'Muu')], max_length=11, verbose_name='Lähdeteoksen tyyppi')),
                ('character', models.CharField(max_length=255, verbose_name='Hahmon tai hahmojen nimet')),
                ('what_kinda_photos', models.TextField(blank=True, help_text='Jos sinulla on jo tässä vaiheessa ajatuksia siitä, millaisia kuvia haluat –\xa0esimerkiksi taustojen, kuvakulmien tai visuaalisen tyylin suhteen –\xa0kerro niistä tässä.', verbose_name='Millaisia kuvia haluat asustasi?')),
                ('reference_links', models.TextField(blank=True, help_text='Mikäli sinulla on Internetissä referenssikuvia hahmostasi, syötä tähän niiden linkit, yksi per rivi (pelkkä osoite, https://…).', verbose_name='Referenssikuvalinkit')),
                ('wip_links', models.TextField(blank=True, help_text='Mikäli sinulla on Internetissä kuvia asustasi keskeneräisenä tai valmiina, syötä tähän niiden linkit, yksi per rivi (pelkkä osoite, https://…).', verbose_name='WIP-kuvalinkit')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=255, unique=True, verbose_name='slug')),
                ('name', models.CharField(max_length=63, verbose_name='name')),
                ('homepage_url', models.CharField(blank=True, max_length=255)),
                ('headline', models.CharField(blank=True, max_length=255)),
                ('organization_name', models.CharField(blank=True, max_length=255)),
                ('organization_url', models.CharField(blank=True, max_length=255)),
                ('active_from', models.DateTimeField(blank=True, null=True)),
                ('active_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('share_contact_details', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoottikala.Conversation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photographer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(help_text='Millä nimellä haluat esittäytyä cossaajille?', max_length=255, verbose_name='Näyttönimi')),
                ('introduction', models.TextField(help_text='Kerro itsestäsi valokuvaajana muutamalla lauseella.', verbose_name='Esittely')),
                ('portfolio_links', models.TextField(blank=True, help_text='Jos sinulla on Internetissä portfolio tai kuvagallerioita, syötä niiden osoitteet tähän, yksi per rivi (pelkkä osoite, https://…).', verbose_name='Portfolio- ja gallerialinkit')),
                ('social_media_links', models.TextField(blank=True, help_text='Jos sinulla on kuvaajaprofiili esim. Facebookissa tai Twitterissä, syötä niiden osoitteet tähän, yksi per rivi (pelkkä osoite, https://…).', verbose_name='Sosiaalisen median linkit')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoottikala.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='cosplayer',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoottikala.Event'),
        ),
        migrations.AddField(
            model_name='cosplayer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conversation',
            name='cosplayer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoottikala.Cosplayer'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoottikala.Event'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='initiated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conversation',
            name='photographer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoottikala.Photographer'),
        ),
        migrations.AlterUniqueTogether(
            name='photographer',
            unique_together=set([('event', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='conversation',
            unique_together=set([('event', 'photographer', 'cosplayer')]),
        ),
    ]
